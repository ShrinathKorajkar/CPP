Software Engineer
In Time Tec, Bangalore
Jul 2023 ‚Äì Present

Languages: C, C++, Python (basic), SQL  
Tools: Git, GitHub, GDB, CMake, GTest  
Concepts: OOP, SOLID, Design Patterns, Multithreading, Thread Synchronization, Memory Management  
Technologies: Linux, TCP/IP, USB, PCoIP, Firmware, Embedded Systems  

Underwent comprehensive C++ training (OOP, STL, templates, threading, C++11, SOLID design).
Built multiple command-line tools for real-world use cases to strengthen core development knowledge:
Elevator Simulation System ‚Äì Multi-threaded C++ CLI tool handling concurrent user requests with real-time file input, queue management, and GTest-based unit testing.
Food Recommendation Engine ‚Äì A full-fledged CLI-based client-server system with authentication, sentiment analysis, preference-based suggestions, MySQL backend, and recommendation logic.
Contributed to HP Anyware (Tera2 Zero Client) development:
Worked on On-Screen Display (OSD) UI, Web UI modules, USB session handling, and SCEP certificate-related tasks.
Implemented and debugged core features of the PCoIP session protocol with multi-threaded managers.
Involved in features such as Session Failover, where a session switches gateways on failure.

I joined In Time Tec on July 5 2023 as a fresher and still working here. After joining I have went under C++ training (basics, oops, templates, threads, C++11 concepts, SOLID, design principles). After the training i built command line applications using C++ to learn using c++ in real life. Those projects are:
1. Elevator Simulation System:
C++ concepts used:- threads, file handling, gtest
Here no of floors, no of lifts, and no of basements are taken as a input in cmdline and then elevator program begins. Here a continous input is taken from file which gets appended with info whenever a user presses up or down button on any of the floors. According to the input and current position of the elevators, the nearest elevator will go to the user. It handles all the corner cases as well.
2. Food Recommendation Engine:
C++ Concepts used:- client-server architecture, gtest, sql database, sockets, csv files, oops, solid, design principles - Singleton, serialization and deserialization, threads.
Here, the system is designed to help a food cafeteria in managing orders, recommending users food and maintaining records for admin and chef. client side contains commandline UI - for authentication(admin, chef, user). Users -checking todays menu rolled out by chef, placing orders, giving feedback for placed orders, Suggest improvements, update food preferences. Chef - roll out menu, view orders, view suggestions and feedbacks. Admin - generate monthly report, view/add/remove users, view/add/remove food items in menu. Server contains a recommendation engine which based on users preferences, food feedbacks suggest food to the user. sentiment analyser which analysis what users want and how the food is good or bad based on feedback, it also gives list of discarded items based on bad ratings to the admin. It connects with mysql database to store the info and server all the clients. 
Also few other small projects like - music player, punch-in punch-out system. all command line interface in c++. 

Apart from these extra small personal projects I have been working as a firmware developer mostly in C from past 2 years in a company level project called HP Anyware Tera 2. This project works on similar to RDP protocol - PCoIP protocol. here we have a Zero Client and a Remote workstation card. the RWC fits into PCIE port of workstation - takes all the graphical data, usb, audio/video and passes to client. the client decrypts the data and show the pixels on monitors, audio as well to the user connected far away. the ZC also connects to VMs hosted on cloud and passes keyboard, mouse interactions to the VMs as well using soft agent(similar to RWC). This project uses multithreading where each functionality is handled by different thread(which we call a manager like usb manager, session manager). Here I have worked on on screen display UI, web UI, USB issues, SCEP issue, session failover to different gateways. 

‚úÖ Top Skills Hiring Managers Look For (C/C++ ‚Äì 2 Years Exp)
üîß Must-Have Technical Skills
Area	Examples
‚úÖ Core Language	C++ (at least C++11), C
‚úÖ OS Knowledge	Linux (user space, POSIX), basic shell
‚úÖ Debugging	GDB, valgrind, logs, assertions
‚úÖ Multithreading	std::thread, pthreads, mutex, condition_variable
‚úÖ Data Structures & Algorithms	STL, linked lists, trees, heaps, sorting, etc.
‚úÖ Memory Mgmt	Heap vs Stack, malloc/new, delete/free, leaks
‚úÖ Compilation	Make, CMake, understanding linking/headers
‚úÖ Version Control	Git, GitHub/GitLab
‚úÖ Unit Testing	GTest or custom harness
‚úÖ Networking	TCP/IP basics, sockets (for systems/devices)
‚úÖ Protocols	UART, USB, SPI, CAN, or PCoIP/RDP (for embedded)

üîê Bonus/Niche Skills
Area	Examples
Embedded	Bare-metal, RTOS, FreeRTOS
Secure Auth	Smart card, SCEP, PKI
Tools	Jenkins, Docker, SonarQube
Design	SOLID, OOP, UML, MVC
Scripting	Python or Bash for automation/testing
Build & Deploy	Cross-compilation, Yocto (for embedded)

üí¨ Soft Skills Companies Look For
Clear communication (esp. when debugging/reporting issues)
Ownership of features/modules
Willingness to mentor juniors
Documentation & team collaboration

Week 1‚Äì2	Core C++, C++11+, OOP, Memory, Pointers
Week 3‚Äì4	Data Structures + Algorithms + STL
Week 5	OS, Linux internals, multithreading
Week 6	Debugging, Smart Pointers, Design Patterns
Week 7	System Design (Low-Level Design)

Naukri, InstaHyre, CutShort, LinkedIn
Pramp, Interviewing.io

üöÄ Top Product-Based Companies (C/C++ Focused)
Company	Roles
Nvidia | Systems, GPU driver, HPC, CUDA, firmware
Qualcomm | Embedded systems, modem firmware, SoC driver
Intel | Firmware, BIOS, embedded, system software
Google (gTech, Search infra) | Systems/backend with C++ focus
Microsoft | Windows kernel, MS Office, VS Code C++
Apple | Embedded, Secure Enclave, OS internals (limited hiring in India)
Amazon (AWS, Devices) | Firmware, embedded, Alexa, Graviton SoC
Samsung R&D | Firmware, mobile platform, display systems
Adobe | PDF engine, Photoshop core, performance optimization
Cisco | Network device firmware, protocol stack (Bangalore)
VMware | Hypervisor, driver teams
Texas Instruments | Real-time embedded software, chip drivers
Analog Devices (ADI) | Embedded systems, signal processing
Synopsys | EDA tools, compiler, verification
AMD | GPU drivers, low-latency firmware, SoC testing

üíº High-Frequency / Fintech / Quant (C++/DSA Focused)
D. E. Shaw | Quantitative tech, infra, backend
Tower Research | High-frequency trading systems (ultra-low latency C++)
Hudson River Trading | Core infra, systems C++
Jump Trading | Real-time trading engines
Graviton Research | Quant infra
Arcesium | Backend/infra in C++/Java
Virtusa xLabs (for Quant clients) | Financial systems in C++

üß™ DeepTech / Systems Startups (High Pay)
Ather Energy | EV firmware, real-time systems
GreyOrange | Robotics, real-time embedded
Tessolve (Hero Electronix) | Firmware and validation
Sama (ex-MuSigma founders) | Custom silicon + OS
Zebra Technologies | Scanner/IoT firmware
Capillary Tech | Edge computing C++ dev
DeepRoot Linux | Kernel, Linux customization
Cimpress/Vistaprint | Print platform firmware/backend
Vehant Technologies | Surveillance/AI devices embedded dev
Steradian Semiconductors (Acquired by Renesas) | Radar firmware
Soliton Technologies | Device control software (instruments)

üì¶ Core Embedded / Industrial MNCs (High-paying teams)
Robert Bosch | Good pay in IPN team & automotive firmware
HARMAN (Samsung) | Automotive, infotainment, C/C++, QNX
GE Healthcare | Firmware and platform teams
Schneider Electric | Embedded control units
Honeywell | Avionics, automation systems
L&T Technology Services | High-end embedded projects (some roles pay 16+)

